// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// compute_residuals_cpp
List compute_residuals_cpp(const arma::mat& X, const arma::mat& Y, const arma::mat& C);
RcppExport SEXP _fmrilss_compute_residuals_cpp(SEXP XSEXP, SEXP YSEXP, SEXP CSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type C(CSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_residuals_cpp(X, Y, C));
    return rcpp_result_gen;
END_RCPP
}
// lss_compute_cpp
arma::mat lss_compute_cpp(const arma::mat& C, const arma::mat& Y);
RcppExport SEXP _fmrilss_lss_compute_cpp(SEXP CSEXP, SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type C(CSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Y(YSEXP);
    rcpp_result_gen = Rcpp::wrap(lss_compute_cpp(C, Y));
    return rcpp_result_gen;
END_RCPP
}
// project_confounds_cpp
List project_confounds_cpp(const arma::mat& X_confounds, const arma::mat& Y_data, const arma::mat& C_trials);
RcppExport SEXP _fmrilss_project_confounds_cpp(SEXP X_confoundsSEXP, SEXP Y_dataSEXP, SEXP C_trialsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X_confounds(X_confoundsSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Y_data(Y_dataSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type C_trials(C_trialsSEXP);
    rcpp_result_gen = Rcpp::wrap(project_confounds_cpp(X_confounds, Y_data, C_trials));
    return rcpp_result_gen;
END_RCPP
}
// lss_beta_cpp
arma::mat lss_beta_cpp(const arma::mat& C_projected, const arma::mat& Y_projected);
RcppExport SEXP _fmrilss_lss_beta_cpp(SEXP C_projectedSEXP, SEXP Y_projectedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type C_projected(C_projectedSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Y_projected(Y_projectedSEXP);
    rcpp_result_gen = Rcpp::wrap(lss_beta_cpp(C_projected, Y_projected));
    return rcpp_result_gen;
END_RCPP
}
// lss_fused_optim_cpp
arma::mat lss_fused_optim_cpp(const arma::mat& X, const arma::mat& Y, const arma::mat& C, int block_size);
RcppExport SEXP _fmrilss_lss_fused_optim_cpp(SEXP XSEXP, SEXP YSEXP, SEXP CSEXP, SEXP block_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type C(CSEXP);
    Rcpp::traits::input_parameter< int >::type block_size(block_sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(lss_fused_optim_cpp(X, Y, C, block_size));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_fmrilss_compute_residuals_cpp", (DL_FUNC) &_fmrilss_compute_residuals_cpp, 3},
    {"_fmrilss_lss_compute_cpp", (DL_FUNC) &_fmrilss_lss_compute_cpp, 2},
    {"_fmrilss_project_confounds_cpp", (DL_FUNC) &_fmrilss_project_confounds_cpp, 3},
    {"_fmrilss_lss_beta_cpp", (DL_FUNC) &_fmrilss_lss_beta_cpp, 2},
    {"_fmrilss_lss_fused_optim_cpp", (DL_FUNC) &_fmrilss_lss_fused_optim_cpp, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_fmrilss(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
