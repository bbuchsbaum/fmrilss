
R version 4.3.2 (2023-10-31) -- "Eye Holes"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(testthat)
Warning message:
package 'testthat' was built under R version 4.3.3 
> library(fmrilss)
> 
> test_check("fmrilss") 
[ FAIL 10 | WARN 0 | SKIP 1 | PASS 17 ]

══ Skipped tests (1) ═══════════════════════════════════════════════════════════
• On CRAN (1): 'test-accuracy-validation.R:161:3'

══ Failed tests ════════════════════════════════════════════════════════════════
── Failure ('test-accuracy-validation.R:29:3'): LSS implementations are numerically consistent ──
Expected `beta_cpp <- lss(Y = Y, bdes = bdes, use_cpp = TRUE)` to run without any errors.
i Actually got a <std::logic_error> with text:
  Mat::init(): requested size is not compatible with row vector layout
── Error ('test-accuracy-validation.R:34:3'): LSS implementations are numerically consistent ──
Error in `eval(code, test_env)`: object 'beta_cpp' not found
Backtrace:
    ▆
 1. └─testthat::expect_equal(dim(beta_cpp), c(n_trials, n_voxels)) at test-accuracy-validation.R:34:3
 2.   └─testthat::quasi_label(enquo(object), label, arg = "object")
 3.     └─rlang::eval_bare(expr, quo_get_env(quo))
── Failure ('test-accuracy-validation.R:110:3'): LSS handles non-overlapping trials correctly ──
Expected `beta_cpp <- lss(Y = Y, bdes = bdes, use_cpp = TRUE)` to run without any errors.
i Actually got a <std::logic_error> with text:
  Mat::init(): requested size is not compatible with row vector layout
── Error ('test-accuracy-validation.R:115:3'): LSS handles non-overlapping trials correctly ──
Error in `eval(code, test_env)`: object 'beta_cpp' not found
Backtrace:
    ▆
 1. └─testthat::expect_equal(dim(beta_cpp), c(n_trials, n_voxels)) at test-accuracy-validation.R:115:3
 2.   └─testthat::quasi_label(enquo(object), label, arg = "object")
 3.     └─rlang::eval_bare(expr, quo_get_env(quo))
── Error ('test-lss-equivalence.R:44:3'): All LSS implementations produce equivalent results ──
<std::logic_error/C++Error/error/condition>
Error: Mat::init(): requested size is not compatible with row vector layout
Backtrace:
    ▆
 1. └─fmrilss::lss(Y = Y, bdes = bdes, use_cpp = TRUE) at test-lss-equivalence.R:44:3
 2.   └─fmrilss:::lss_fast(dset = dset, bdes = bdes, Y = Y, use_cpp = use_cpp)
 3.     └─fmrilss:::lss_compute_cpp(res$Q_dmat_ran, res$residual_data)
── Error ('test-lss-equivalence.R:83:3'): LSS implementations handle edge cases correctly ──
<std::logic_error/C++Error/error/condition>
Error: Mat::init(): requested size is not compatible with row vector layout
Backtrace:
    ▆
 1. └─fmrilss::lss(Y = Y_single, bdes = bdes_single, use_cpp = TRUE) at test-lss-equivalence.R:83:3
 2.   └─fmrilss:::lss_fast(dset = dset, bdes = bdes, Y = Y, use_cpp = use_cpp)
 3.     └─fmrilss:::lss_compute_cpp(res$Q_dmat_ran, res$residual_data)
── Error ('test-lss-equivalence.R:156:3'): C++ functions match internal implementations ──
<std::logic_error/C++Error/error/condition>
Error: Mat::init(): requested size is not compatible with row vector layout
Backtrace:
    ▆
 1. └─fmrilss::lss_beta_cpp(result_cpp$Q_dmat_ran, result_cpp$residual_data) at test-lss-equivalence.R:156:3
 2.   └─fmrilss:::lss_compute_cpp(C_projected, Y_projected)
── Failure ('test-lss-equivalence.R:196:3'): LSS handles numerical edge cases ──
Expected `beta_cpp <- lss(Y = Y, bdes = bdes, use_cpp = TRUE)` to run without any errors.
i Actually got a <std::logic_error> with text:
  Mat::init(): requested size is not compatible with row vector layout
── Error ('test-lss-equivalence.R:200:3'): LSS handles numerical edge cases ────
Error in `eval(code, test_env)`: object 'beta_cpp' not found
Backtrace:
    ▆
 1. └─testthat::expect_equal(beta_r, beta_cpp, tolerance = 1e-06) at test-lss-equivalence.R:200:3
 2.   └─testthat::quasi_label(enquo(expected), expected.label, arg = "expected")
 3.     └─rlang::eval_bare(expr, quo_get_env(quo))
── Error ('test-lss-equivalence.R:222:3'): Data validation works correctly ─────
<std::logic_error/C++Error/error/condition>
Error: Mat::init(): requested size is not compatible with row vector layout
Backtrace:
    ▆
 1. ├─testthat::expect_warning(...) at test-lss-equivalence.R:222:3
 2. │ └─testthat:::expect_condition_matching(...)
 3. │   └─testthat:::quasi_capture(...)
 4. │     ├─testthat (local) .capture(...)
 5. │     │ └─base::withCallingHandlers(...)
 6. │     └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
 7. └─fmrilss::lss(Y = Y_df, bdes = bdes)
 8.   └─fmrilss:::lss_fast(dset = dset, bdes = bdes, Y = Y, use_cpp = use_cpp)
 9.     └─fmrilss:::lss_compute_cpp(res$Q_dmat_ran, res$residual_data)

[ FAIL 10 | WARN 0 | SKIP 1 | PASS 17 ]
Error: Test failures
Execution halted
